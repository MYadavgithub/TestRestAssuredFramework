<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="2" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Executed POST API: /api/users]]>
    </line>
    <line>
      <![CDATA[============API Response===========]]>
    </line>
    <line>
      <![CDATA[API response status code is 2XX series]]>
    </line>
    <line>
      <![CDATA[Print success message or API response]]>
    </line>
    <line>
      <![CDATA[API FAILED: GET /api/users]]>
    </line>
    <line>
      <![CDATA[Status Code: 401]]>
    </line>
    <line>
      <![CDATA[Headers: {x-consumer-name=AG, x-api-key=reqres-free-v1, content-Type=application/json, deviceId=OnePlus9, platform=android}]]>
    </line>
    <line>
      <![CDATA[Query Params: {}]]>
    </line>
    <line>
      <![CDATA[Response Body: {"error":"Invalid API key.","how_to_get_one":"https://reqres.in/upgrade"}]]>
    </line>
    <line>
      <![CDATA[============API Response===========]]>
    </line>
    <line>
      <![CDATA[{"error":"Invalid API key.","how_to_get_one":"https://reqres.in/upgrade"}]]>
    </line>
    <line>
      <![CDATA[Print failure message or API response]]>
    </line>
    <line>
      <![CDATA[API FAILED: GET /api/users]]>
    </line>
    <line>
      <![CDATA[Status Code: 401]]>
    </line>
    <line>
      <![CDATA[Headers: {x-consumer-name=AG, x-api-key=reqres-free-v1, content-Type=application/json, deviceId=OnePlus9, platform=android}]]>
    </line>
    <line>
      <![CDATA[Query Params: {}]]>
    </line>
    <line>
      <![CDATA[Response Body: {"error":"Invalid API key.","how_to_get_one":"https://reqres.in/upgrade"}]]>
    </line>
    <line>
      <![CDATA[Print failure message or API response]]>
    </line>
  </reporter-output>
  <suite started-at="2025-05-04T09:16:30 IST" name="All Test Suite" finished-at="2025-05-04T09:16:32 IST" duration-ms="1937">
    <groups>
    </groups>
    <test started-at="2025-05-04T09:16:30 IST" name="D:/RetrofitProject/src/test/resources" finished-at="2025-05-04T09:16:32 IST" duration-ms="1937">
      <class name="getListUsers">
        <test-method is-config="true" signature="beforeTestMethod()[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:30 IST" name="beforeTestMethod" finished-at="2025-05-04T09:16:30 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTestMethod -->
        <test-method is-config="true" signature="beforeMethodmethod(java.lang.reflect.Method)[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:30 IST" name="beforeMethodmethod" finished-at="2025-05-04T09:16:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getListUsers.verifyCreateUserFlow()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodmethod -->
        <test-method signature="verifyCreateUserFlow()[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:30 IST" name="verifyCreateUserFlow" finished-at="2025-05-04T09:16:31 IST" duration-ms="782" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Executed POST API: /api/users]]>
            </line>
            <line>
              <![CDATA[============API Response===========]]>
            </line>
            <line>
              <![CDATA[API response status code is 2XX series]]>
            </line>
            <line>
              <![CDATA[Print success message or API response]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyCreateUserFlow -->
        <test-method is-config="true" signature="afterMethodMethod(org.testng.ITestResult)[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:31 IST" name="afterMethodMethod" finished-at="2025-05-04T09:16:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCreateUserFlow status=SUCCESS method=getListUsers.verifyCreateUserFlow()[pri:0, instance:getListUsers@278f8425] output=Executed POST API: /api/users]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodMethod -->
        <test-method signature="verifyGetListUsersWhenPageNumberIsSentInQueryParam()[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:31 IST" name="verifyGetListUsersWhenPageNumberIsSentInQueryParam" finished-at="2025-05-04T09:16:31 IST" duration-ms="603" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.restassured.path.json.JsonPath.getInt(JsonPath.java:245)
at getListUsers.verifyGetListUsersWhenPageNumberIsSentInQueryParam(getListUsers.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:148)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:95)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
at com.sun.proxy.$Proxy2.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
            <line>
              <![CDATA[API FAILED: GET /api/users]]>
            </line>
            <line>
              <![CDATA[Status Code: 401]]>
            </line>
            <line>
              <![CDATA[Headers: {x-consumer-name=AG, x-api-key=reqres-free-v1, content-Type=application/json, deviceId=OnePlus9, platform=android}]]>
            </line>
            <line>
              <![CDATA[Query Params: {}]]>
            </line>
            <line>
              <![CDATA[Response Body: {"error":"Invalid API key.","how_to_get_one":"https://reqres.in/upgrade"}]]>
            </line>
            <line>
              <![CDATA[============API Response===========]]>
            </line>
            <line>
              <![CDATA[{"error":"Invalid API key.","how_to_get_one":"https://reqres.in/upgrade"}]]>
            </line>
            <line>
              <![CDATA[Print failure message or API response]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyGetListUsersWhenPageNumberIsSentInQueryParam -->
        <test-method is-config="true" signature="beforeMethodmethod(java.lang.reflect.Method)[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:31 IST" name="beforeMethodmethod" finished-at="2025-05-04T09:16:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getListUsers.verifyGetListUsersWhenPageNumberIsSentInQueryParam()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodmethod -->
        <test-method is-config="true" signature="afterMethodMethod(org.testng.ITestResult)[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:31 IST" name="afterMethodMethod" finished-at="2025-05-04T09:16:31 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetListUsersWhenPageNumberIsSentInQueryParam status=FAILURE method=getListUsers.verifyGetListUsersWhenPageNumberIsSentInQueryParam()[pri:0, instance:getListUsers@278f8425] output=API FAILED: GET /api/users]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodMethod -->
        <test-method signature="verifyGetListUsersWithoutQueryParam()[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:31 IST" name="verifyGetListUsersWithoutQueryParam" finished-at="2025-05-04T09:16:32 IST" duration-ms="414" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at io.restassured.path.json.JsonPath.getInt(JsonPath.java:245)
at getListUsers.verifyGetListUsersWithoutQueryParam(getListUsers.java:29)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.runTests(TestNGTestClassProcessor.java:148)
at org.gradle.api.internal.tasks.testing.testng.TestNGTestClassProcessor.stop(TestNGTestClassProcessor.java:95)
at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
at com.sun.proxy.$Proxy2.stop(Unknown Source)
at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
            <line>
              <![CDATA[API FAILED: GET /api/users]]>
            </line>
            <line>
              <![CDATA[Status Code: 401]]>
            </line>
            <line>
              <![CDATA[Headers: {x-consumer-name=AG, x-api-key=reqres-free-v1, content-Type=application/json, deviceId=OnePlus9, platform=android}]]>
            </line>
            <line>
              <![CDATA[Query Params: {}]]>
            </line>
            <line>
              <![CDATA[Response Body: {"error":"Invalid API key.","how_to_get_one":"https://reqres.in/upgrade"}]]>
            </line>
            <line>
              <![CDATA[Print failure message or API response]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyGetListUsersWithoutQueryParam -->
        <test-method is-config="true" signature="beforeMethodmethod(java.lang.reflect.Method)[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:31 IST" name="beforeMethodmethod" finished-at="2025-05-04T09:16:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void getListUsers.verifyGetListUsersWithoutQueryParam()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethodmethod -->
        <test-method is-config="true" signature="afterMethodMethod(org.testng.ITestResult)[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:32 IST" name="afterMethodMethod" finished-at="2025-05-04T09:16:32 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyGetListUsersWithoutQueryParam status=FAILURE method=getListUsers.verifyGetListUsersWithoutQueryParam()[pri:0, instance:getListUsers@278f8425] output=API FAILED: GET /api/users]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethodMethod -->
        <test-method is-config="true" signature="afterTestMethod()[pri:0, instance:getListUsers@278f8425]" started-at="2025-05-04T09:16:32 IST" name="afterTestMethod" finished-at="2025-05-04T09:16:32 IST" duration-ms="85" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTestMethod -->
      </class> <!-- getListUsers -->
    </test> <!-- D:/RetrofitProject/src/test/resources -->
  </suite> <!-- All Test Suite -->
</testng-results>
